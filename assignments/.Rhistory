hello = colMean(rnaCounts[,1],T)
hello = log2(rnaCounts[,1])
hello =mean(hello)
hello = log2(rnaCounts[,1])
hello = as.double(log2(rnaCounts[,1]))
hello = mean(as.double(log2(rnaCounts[,1])))
hello = mean(log2(rnaCounts[,1]),na.rm =T)
hello = mean(log2(rnaCounts[,1]))
hello = log2(rnaCounts[,1])
hell = rnaCounts[,1]
View(hell)
hello = mean(log2(rnaCounts[,1],na.rm =T))
hello = mean(log2(rnaCounts[,1]),na.rm =T))
hello = mean(log2(rnaCounts[,1]),na.rm =T)
hello = mean(log2(rnaCounts[,1]),inf.rm =T)
hello = mean(log2(rnaCounts[,1]),-inf.rm =T)
hello = mean(log2(rnaCounts[,1]),NaN.rm =T)
hello = nanmean(log2(rnaCounts[,1]))
colMean = function(column, logThis = F){
if (logThis == T){
log2(column)
}
mean(column[is.nan==F])
}
hello = colMean(rnaCounts[,1],T)
hell = rnaCounts[,1]
hello = log2(rnaCounts[,1])
hello = mean(hello[is.nan])
hello = mean(hello[is.nan(hello)==F])
hello = log2(rnaCounts[,1])
hello = mean(hello[is.nan(hello)==F])
hello = mean(hello[is.numeric(hello)==T])
hello = log2(rnaCounts[,1])
hello = mean(hello[is.numeric(hello)==T])
hello = log2(rnaCounts[,1])
hell = mean(hello[is.numeric(hello)==T])
cond= is.nan(hello)
View(cond)
hello = log2(rnaCounts[,1])
cond= is.nan(hello)
cond= is.finite(hello)
colMean = function(column, logThis = F){
if (logThis == T){
log2(column)
}
mean(column[is.finite(column)==F])
}
hello = colMean(rnaCounts[,1],T)
hello = log2(rnaCounts[,1])
cond= is.finite(hello)
hell = mean(hello[cond])
colMean = function(column, logThis = F){
if (logThis == T){
column = log2(column)
}
condition = is.finite(column)
mean(column[condition])
}
hello = colMean(rnaCounts[,1],T)
theActualMean = colMean(rnaCounts[,1],T)
#Question 3
everyMean = vector(ncol(rnaCounts))
#Garrett's awesomely completed perfectly on time this time Assignment 3
#Fun time tracking information: DataCamp 2h55min to completion,
rm(list=ls())
rnaCounts = read.csv("rna_counts.csv", header=T, row.names = 1)
colMean = function(column, logThis = F){
if (logThis == T){
column = log2(column)
}
condition = is.finite(column)
mean(column[condition])
}
theActualMean = colMean(rnaCounts[,1],T)
#Question 3
everyMean = vector(ncol(rnaCounts))
#Question 3
everyMean = vector(ncol(rnaCounts))
ncol(rnaCounts)
#Question 3
everyMean = numeric(ncol(rnaCounts))
for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
}
theActualMean = colMean(rnaCounts[,1])
#Question 3
everyMean = double(ncol(rnaCounts))
for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
}
everyMean[1]
#Question 3
everyMean = double(ncol(rnaCounts))
for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
colnames(everyMean)[i] = colnames(rnacounts[i])
}
#Question 3
everyMean = double(ncol(rnaCounts))
for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
colnames(everyMean)[i] = colnames(rnacounts[])
}
#Question 3
everyMean = double(ncol(rnaCounts))
for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
colnames(everyMean)[i] = colnames(rnacounts)[i]
}
#Question 3
everyMean = double(ncol(rnaCounts))
for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
colnames(everyMean)[i] = colnames(rnaCounts)[i]
}
#Question 3
everyMean = double(ncol(rnaCounts))
for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
}
everyMean
everyMean = lapply(rnaCounts, colMean)
View(everyMean)
system.time(expr =
everyMean = lapply(rnaCounts, colMean))
system.time(expr = everyMean = lapply(rnaCounts, colMean))
system.time(expr = "everyMean = lapply(rnaCounts, colMean)")
system.time(expr = "for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
}")
system.time(for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
})
system.time(everyMean = lapply(rnaCounts, colMean))
#Question 4
everyMean = double(ncol(rnaCounts))
system.time(lapply(rnaCounts, colMean))
system.time(everyMean = lapply(rnaCounts, colMean))
system.time(lapply(rnaCounts, colMean))
#Question 4
everyMean = double(ncol(rnaCounts))
short = system.time(lapply(rnaCounts, colMean))$elapsed
short = system.time(lapply(rnaCounts, colMean))[3]
longer = system.time(for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
})[3]
#Question 3
everyMean = double(ncol(rnaCounts))
for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
}
everyMean
theActualMean = colMean(rnaCounts[,1])
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/garre/Documents/GitHub/Bio720/assignments")
rnaCounts = read.csv("rna_counts.csv", header=T, row.names = 1)
colMean = function(column, logThis = F){
if (logThis == T){
column = log2(column)
}
condition = is.finite(column)
mean(column[condition])
}
theActualMean = colMean(rnaCounts[,1])
colMean(rnaCounts[,1])
colMean(rnaCounts[,2])
c(colMean(rnaCounts[,1]),colMean(rnaCounts[,2]))
everyMean = double(ncol(rnaCounts))
for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
}
everyMean
everyMean = double(ncol(rnaCounts))
everyMean = lapply(rnaCounts, colMean)
short = system.time(lapply(rnaCounts, colMean))[3]
longer = system.time(for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
})[3]
system.time(lapply(rnaCounts, colMean))[3]
system.time(for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
})[3]
c(system.time(lapply(rnaCounts, colMean))[3], system.time(for (i in seq_along(rnaCounts)){
c(system.time(lapply(rnaCounts, colMean))[3], system.time(for (i in seq_along(rnaCounts)){everyMean[i] colMean(rnaCounts[,i]) names(everyMean)[i] = colnames(rnaCounts)[i
c(system.time(lapply(rnaCounts, colMean))[3], system.time(for (i in seq_along(rnaCounts)){everyMean[i]colMean(rnaCounts[,i])
c(system.time(lapply(rnaCounts, colMean))[3], system.time(for (i in seq_along(rnaCounts)){everyMean[i]colMean(rnaCounts[,i])
c(system.time(lapply(rnaCounts, colMean))[3],
system.time(for (i in seq_along(rnaCounts)){
names(everyMean)[i] = colnames(rnaCounts)[i]
})[3]
)
c(system.time(lapply(rnaCounts, colMean))[3],
system.time(for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
})[3])
c(system.time(lapply(rnaCounts, colMean))[3],
system.time(for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
})[3])
system.time(lapply(rnaCounts, colMean))[3]
everyMean = double(ncol(rnaCounts))
system.time(lapply(rnaCounts, colMean))[3]
system.time(for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
})[3]
everyMean = double(ncol(rnaCounts))
system.time(for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]
})[3]
system.time(lapply(rnaCounts, colMean(T)))[3]
system.time(lapply(rnaCounts, colMean(logThis =T)))[3]
everyMean = lapply(rnaCounts, colMean, LogThis =T)
everyMean = lapply(rnaCounts, colMean, logThis =T)
View(everyMean)
everyMean = lapply(rnaCounts, colMean, logThis =T)
everyMean = lapply(rnaCounts, colMean, logThis =T)
View(everyMean)
everyMean = lapply(rnaCounts, colMean, logThis =F)
everyMean = lapply(rnaCounts, colMean, logThis =T)
colMean(rnaCounts[,1], logThis=T)
everyMean = lapply(rnaCounts, colMean, T)
View(everyMean)
everyMean = lapply(rnaCounts,logThis=T, colMean)
View(everyMean)
everyMean = Sapply(rnaCounts, colMean,logThis=T)
everyMean = sapply(rnaCounts, colMean,logThis=T)
system.time(sapply(rnaCounts, colMean)))[3]
system.time(sapply(rnaCounts, colMean))[3]
system.time(for (i in seq_along(rnaCounts)){
everyMean[i] = colMean(rnaCounts[,i])
names(everyMean)[i] = colnames(rnaCounts)[i]})[3]
mean(rnaCounts[[]])
mean(rnaCounts[])
colMeans(rnaCounts)
hello= rowMeans(rnaCounts)[[1]]
hello= rowMeans(rnaCounts)[[2]]
hello= rowMeans(rnaCounts)[[3]]
geneMean= rowMeans(rnaCounts)
rnaCounts = read.csv("rna_counts.csv", header=T, row.names = 1)
colMean = function(column, logThis = F){
if (logThis == T){
column = log2(column)
}
condition = is.finite(column)
mean(column[condition])
}
View(rnaCounts)
read.table = (rnaCounts,sep = "_")
View(rnaCounts)
read.table = (myColumns,sep = "_")
myColumns = colNames(rnaCounts)
myColumns = colnames(rnaCounts)
read.table = (myColumns, sep = "_")
mycolumns = read.table(myColumns, sep = "_")
mycolumns = read.table(myColumns, sep = "_")
mycolumns = table(myColumns, sep = "_")
View(myColumns)
myColumns = strsplit(myColumns, sep = "_")
myColumns = strsplit(myColumns, split = "_")
View(myColumns)
myColumns[[1]]
cond[1] = myColumns[[1]][3] =="female"&&myColumns[[1]][4] =="hdhorn"
cond = myColumns[[1]][3] =="female"&&myColumns[[1]][4] =="hdhorn"
cond = myColumns[[1]][3] =="male"&&myColumns[[1]][4] =="hdhorn"
cond = myColumns[[49]][3] =="male"&&myColumns[[49]][4] =="hdhorn"
cond = logical(ncol(myColumns))
cond = logical(length(myColumns))
for (i in seq_along(myColumns)){
cond[i] = myColumns[[i]][3] =="female"&&myColumns[[i]][4] =="hdhorn"
}
cond = logical(length(myColumns))
for (i in seq_along(myColumns)){
cond[i] = myColumns[[i]][3] =="male"&&myColumns[[i]][4] =="hdhorn"
}
condition = logical(length(myColumns))
x= logical(length(myColumns))
rowMeans(rnaCounts[,x])
for (i in seq_along(myColumns)){
x[i] = !myColumns[[i]][3] =="male"&&myColumns[[i]][4] =="hdhorn"
}
x[i] = !myColumns[[i]][3] =="male"&& !myColumns[[i]][4] =="hdhorn"
View(rnaCounts)
myColumns = colnames(rnaCounts)
myColumns = strsplit(myColumns, split = "_")
x= logical(length(myColumns))
for (i in seq_along(myColumns)){
x[i] = myColumns[[i]][3] !="male"&& myColumns[[i]][4] !="hdhorn"
}
x[i] = myColumns[[i]][3] !="male" | myColumns[[i]][4] !="hdhorn"
x= logical(length(myColumns))
for (i in seq_along(myColumns)){
x[i] = myColumns[[i]][3] !="male" | myColumns[[i]][4] !="hdhorn"
}
x[49]
myColumns = colnames(rnaCounts)
myColumns = strsplit(myColumns, split = "_")
x= logical(length(myColumns))
for (i in seq_along(myColumns)){
x[i] = myColumns[[i]][3] !="male" | myColumns[[i]][4] !="hdhorn"
}
rowMeans(rnaCounts[,x])
myColumns = colnames(rnaCounts)
myColumns = strsplit(myColumns, split = "_")
x= logical(length(myColumns))
for (i in seq_along(myColumns)){
x[i] = myColumns[[i]][3] !="male" | myColumns[[i]][4] !="hdhorn"
}
rowMeans(rnaCounts[,-x])
rnaCounts[]= rnaCounts[,-x]
View(rnaCounts)
rnaCounts[[1]]
rc2= rnaCounts[[-x]]
for (i in seq_along(myColumns)){
x[i] = myColumns[[i]][3] =="male" && myColumns[[i]][4] =="hdhorn"
}
x[49]
rc2 =rnaCounts[x]
View(rc2)
rowMeans(rc2)
justMaleHeads = function(x){
x[3]=="male"&&x[4]=="hdhorn"
}
theRightStuff = sapply(myColumns,justMaleHeads)
theRightStuff[49]
theRightStuff = sapply(myColumns,justMaleHeads)
justMaleHeads = function(x,arg2 = NA){
y = x[3]=="male"&&x[4]=="hdhorn"
if (is.na(arg2)==F){
y = y&&x[2]==arg2
}
y
}
theRightStuff = sapply(myColumns,justMaleHeads)
theRightStuff[49]
rc2 =rnaCounts[x]
rm(rc2)
rc2 = rnaCount[sapply(myColumns,justMaleHeads)]
rc2 = rnaCounts[sapply(myColumns,justMaleHeads)]
lg = rnaCounts[sapply(myColumns, justMaleHeads, arg2="sm")]
lg = rnaCounts[sapply(myColumns, justMaleHeads, arg2="lg")]
sm = rnaCounts[sapply(myColumns, justMaleHeads, arg2="sm")]
diff = rowMeans(lg)-rowMeans(sm)
meanDiff = mean(rowMeans(lg)-rowMeans(sm))
help = rowMeans(rnaCounts)
help
help = rowMeans(rnaCounts) - rnaCounts
View(help)
ggplot(rnaCounts, aes(x = rowMeans(rnaCounts),y = help))+
geom_point()
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
help = rowMeans(rnaCounts) - rnaCounts
ggplot(rnaCounts, aes(x = rowMeans(rnaCounts),y = help))+
geom_point()
me = rnaCounts
View(help)
rnaCounts = rowMeans(rnaCounts)
View(me)
rnaCounts= me
me = numeric(5)
me = numeric(length(rnaCounts))
me = vector(length(rnaCounts))
me = list(length(rnaCounts))
View(me)
me = lists(length(rnaCounts))
me = rnaCounts
View(me)
me[,1]= rowMeans(rnaCounts)
for (i in seq_along(me)){
me[,i] = rowMeans(rnaCounts)
}
ggplot(rnaCounts, aes(x = me,y = help))+
geom_point()
library(ggplot2)
help = rowMeans(rnaCounts) - rnaCounts
me = rnaCounts
for (i in seq_along(me)){
me[,i] = rowMeans(rnaCounts)
}
ggplot(rnaCounts, aes(x = me,y = help))+
geom_point()
help_me= c(help, me)
ggplot(help_me, aes(x = me,y = help))+
geom_point()
ggplot(help_me, aes(x = help_me[2],y = help_me[1]))+
geom_point()
help_me= c(help, me)
View(help_me)
help_me= data.frame(help, me)
help_me= list(me, help)
View(help_me)
help_me= data.frame(me, help)
help_me= data.frame()
help_me[1] = me
help_me[2] = help
View(help_me)
help_me= data.frame(help, me)
View(help_me)
help_me= data.frame(help, me)
View(help)
ggplot(help_me, aes(x = help_me[56:110],y = help_me[1:55]))+
geom_point()
help = rowMeans(rnaCounts)
me = help - mean(help)
help_me= data.frame(help,me)
View(help_me)
ggplot(help_me, aes(x = help, y = me))+
geom_point()
rnaLog = log2(rnaCounts)
rnaLog = log2(rnaCounts)
help = rowMeans(rnaLog)
me = help - mean(help)
help_me= data.frame(help,me)
ggplot(help_me, aes(x = help, y = me))+
geom_point()
rnaLog = log2(rnaCounts)
View(rnaCounts)
View(rnaLog)
rnaLog = log2(rnaCounts+0.1)
rnaLog = rnaCounts + 0.1
rnaLog = log2(rnaLog)
rnaLog = rnaCounts[] + 0.1
rnaLog = log2(rnaLog)
rnaLog = rnaCounts + 0.1
rnaLog = log2(rnaLog)
help = rowMeans(rnaLog)
me = help - mean(help)
help_me= data.frame(help,me)
ggplot(help_me, aes(x = help, y = me))+
geom_point()
rowMeans(rnaCounts)
geneMeans = rowMeans(rnaCounts)
genMeans= colMeans(rnaCounts)
geneMeans= colMeans(rnaCounts)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
theMeans = rowMeans(rnaCounts)
meanAverage = theMeans - mean(help)
maPlot= data.frame(theMeans,meanAverage)
ggplot(maPlot, aes(x = theMeans, y = meanAverage))+
geom_point()
meanAverage = theMeans[] - mean(help)
maPlot= data.frame(theMeans,meanAverage)
ggplot(maPlot, aes(x = theMeans, y = meanAverage))+
geom_point()
rnaLog = rnaCounts + 0.1
rnaLog = log2(rnaLog)
theMeans = rowMeans(rnaLog)
meanAverage = theMeans[] - mean(help)
maPlot= data.frame(theMeans,meanAverage)
rnaLog = rnaCounts + 0.1
rnaLog = log2(rnaLog)
theMeans = rowMeans(rnaLog)
meanAverage = theMeans[] - mean(theMeans)
View(meanAverage)
maPlot= data.frame(theMeans,meanAverage)
ggplot(maPlot, aes(x = theMeans, y = meanAverage))+
geom_point()
rnaLog = rnaCounts + 0.1
rnaLog = log2(rnaLog)
meanExpr = rowMeans(rnaLog)
diff = meanExpr[] - mean(meanExpr)
maPlot= data.frame(meanExpr,diff)
ggplot(maPlot, aes(x = meanExpr, y = diff))+
geom_point()
meanDiff = rowMeans(lg)-rowMeans(sm)
lg = rowMeans(rnaCounts[sapply(myColumns, justMaleHeads, arg2="lg")])
sm = rowMeans(rnaCounts[sapply(myColumns, justMaleHeads, arg2="sm")])
meanDiff = lg-sm
ggplot(df, aes(y=meanDiff)) + geom_point(aes(x=lg), color="red") + geom_point(aes(x=sm), color = "green")
ggplot(df, aes(y=meanDiff)) + geom_point(aes(x=lg), color="red") + geom_point(aes(x=sm), color = "green")
df = data.frame(meanDiff,lg,sm)
ggplot(df, aes(y=meanDiff)) + geom_point(aes(x=lg), color="red") + geom_point(aes(x=sm), color = "green")
rnaLog = rnaCounts + 0.1
rnaLog = log2(rnaLog)
lg = rowMeans(rnaLog[sapply(myColumns, justMaleHeads, arg2="lg")])
sm = rowMeans(rnaLog[sapply(myColumns, justMaleHeads, arg2="sm")])
meanDiff = lg-sm
df = data.frame(meanDiff,lg,sm)
ggplot(df, aes(y=meanDiff)) + geom_point(aes(x=lg), color="red") + geom_point(aes(x=sm), color = "green")
ggplot(df, aes(y=meanDiff), xlab="Mean Gene Expression") + geom_point(aes(x=lg), color="red") + geom_point(aes(x=sm), color = "green")
df = data.frame(meanDiff,lg,sm)
ggplot(df, aes(y=meanDiff)) + geom_point(aes(x=lg), color="red") + geom_point(aes(x=sm), color = "green") +labs(x ="Mean Gene Expression", y = "Difference in Mean Gene Expression")
lg = rowMeans(rnaCounts[sapply(myColumns, justMaleHeads, arg2="lg")])
meanDiff = lg-sm
df = data.frame(meanDiff,lg,sm)
ggplot(df, aes(y=meanDiff)) + geom_point(aes(x=lg), color="red") + geom_point(aes(x=sm), color = "green") +labs(x ="Mean Gene Expression", y = "Difference in Mean Gene Expression")
lg = rowMeans(rnaCounts[sapply(myColumns, justMaleHeads, arg2="lg")])
sm = rowMeans(rnaCounts[sapply(myColumns, justMaleHeads, arg2="sm")])
meanDiff = lg-sm
df = data.frame(meanDiff,lg,sm)
ggplot(df, aes(y=meanDiff)) + geom_point(aes(x=lg), color="red") + geom_point(aes(x=sm), color = "green") +labs(x ="Mean Gene Expression", y = "Difference in Mean Gene Expression")
rnaLog = rnaCounts + 0.1
rnaLog = log2(rnaLog)
lg = rowMeans(rnaLog[sapply(myColumns, justMaleHeads, arg2="lg")])
sm = rowMeans(rnaLog[sapply(myColumns, justMaleHeads, arg2="sm")])
meanDiff = lg-sm
df = data.frame(meanDiff,lg,sm)
ggplot(df, aes(y=meanDiff)) + geom_point(aes(x=lg), color="red") + geom_point(aes(x=sm), color = "green") +labs(x ="Mean Gene Expression", y = "Difference in Mean Gene Expression")
